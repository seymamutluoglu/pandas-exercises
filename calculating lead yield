{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.14","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":9297048,"sourceType":"datasetVersion","datasetId":5628930}],"dockerImageVersionId":30761,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","execution":{"iopub.status.busy":"2024-09-01T22:19:08.547269Z","iopub.execute_input":"2024-09-01T22:19:08.547726Z","iopub.status.idle":"2024-09-01T22:19:08.560393Z","shell.execute_reply.started":"2024-09-01T22:19:08.547682Z","shell.execute_reply":"2024-09-01T22:19:08.559104Z"},"trusted":true},"execution_count":5,"outputs":[{"name":"stdout","text":"/kaggle/input/persona/persona.csv\n","output_type":"stream"}]},{"cell_type":"code","source":"import pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\npd.set_option('display.max_coLumns', None)\npd.set_option('display.width', 500)","metadata":{"execution":{"iopub.status.busy":"2024-09-02T13:35:11.186526Z","iopub.execute_input":"2024-09-02T13:35:11.187450Z","iopub.status.idle":"2024-09-02T13:35:12.315264Z","shell.execute_reply.started":"2024-09-02T13:35:11.187403Z","shell.execute_reply":"2024-09-02T13:35:12.314249Z"},"trusted":true},"execution_count":3,"outputs":[]},{"cell_type":"code","source":"df = pd.read_csv(\"/kaggle/input/persona/persona.csv\")\ndf.head()","metadata":{"execution":{"iopub.status.busy":"2024-09-02T13:35:16.618126Z","iopub.execute_input":"2024-09-02T13:35:16.619166Z","iopub.status.idle":"2024-09-02T13:35:16.656385Z","shell.execute_reply.started":"2024-09-02T13:35:16.619120Z","shell.execute_reply":"2024-09-02T13:35:16.655438Z"},"trusted":true},"execution_count":4,"outputs":[{"execution_count":4,"output_type":"execute_result","data":{"text/plain":"   PRICE   SOURCE   SEX COUNTRY  AGE\n0     39  android  male     bra   17\n1     39  android  male     bra   17\n2     49  android  male     bra   17\n3     29  android  male     tur   17\n4     49  android  male     tur   17","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>PRICE</th>\n      <th>SOURCE</th>\n      <th>SEX</th>\n      <th>COUNTRY</th>\n      <th>AGE</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>39</td>\n      <td>android</td>\n      <td>male</td>\n      <td>bra</td>\n      <td>17</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>39</td>\n      <td>android</td>\n      <td>male</td>\n      <td>bra</td>\n      <td>17</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>49</td>\n      <td>android</td>\n      <td>male</td>\n      <td>bra</td>\n      <td>17</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>29</td>\n      <td>android</td>\n      <td>male</td>\n      <td>tur</td>\n      <td>17</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>49</td>\n      <td>android</td>\n      <td>male</td>\n      <td>tur</td>\n      <td>17</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"uni_source = df[\"SOURCE\"].unique()\nprint(uni_source)\ndf[\"SOURCE\"].value_counts()","metadata":{"execution":{"iopub.status.busy":"2024-09-01T22:21:10.475521Z","iopub.execute_input":"2024-09-01T22:21:10.476111Z","iopub.status.idle":"2024-09-01T22:21:10.494362Z","shell.execute_reply.started":"2024-09-01T22:21:10.476059Z","shell.execute_reply":"2024-09-01T22:21:10.493016Z"},"trusted":true},"execution_count":13,"outputs":[{"name":"stdout","text":"['android' 'ios']\n","output_type":"stream"},{"execution_count":13,"output_type":"execute_result","data":{"text/plain":"SOURCE\nandroid    2974\nios        2026\nName: count, dtype: int64"},"metadata":{}}]},{"cell_type":"code","source":"price_frequencies = df['PRICE'].value_counts()\nprint(price_frequencies)","metadata":{"execution":{"iopub.status.busy":"2024-09-01T22:25:03.440434Z","iopub.execute_input":"2024-09-01T22:25:03.440954Z","iopub.status.idle":"2024-09-01T22:25:03.451518Z","shell.execute_reply.started":"2024-09-01T22:25:03.440909Z","shell.execute_reply":"2024-09-01T22:25:03.449941Z"},"trusted":true},"execution_count":14,"outputs":[{"name":"stdout","text":"PRICE\n29    1305\n39    1260\n49    1031\n19     992\n59     212\n9      200\nName: count, dtype: int64\n","output_type":"stream"}]},{"cell_type":"code","source":"country_count = df['COUNTRY'].value_counts()\nprint(country_count)","metadata":{"execution":{"iopub.status.busy":"2024-09-01T22:26:30.272538Z","iopub.execute_input":"2024-09-01T22:26:30.273212Z","iopub.status.idle":"2024-09-01T22:26:30.284396Z","shell.execute_reply.started":"2024-09-01T22:26:30.273150Z","shell.execute_reply":"2024-09-01T22:26:30.282854Z"},"trusted":true},"execution_count":15,"outputs":[{"name":"stdout","text":"COUNTRY\nusa    2065\nbra    1496\ndeu     455\ntur     451\nfra     303\ncan     230\nName: count, dtype: int64\n","output_type":"stream"}]},{"cell_type":"code","source":"country_revenue = df.groupby('COUNTRY')['PRICE'].sum()\nprint(country_revenue)","metadata":{"execution":{"iopub.status.busy":"2024-09-01T22:28:32.860694Z","iopub.execute_input":"2024-09-01T22:28:32.861169Z","iopub.status.idle":"2024-09-01T22:28:32.877826Z","shell.execute_reply.started":"2024-09-01T22:28:32.861125Z","shell.execute_reply":"2024-09-01T22:28:32.876616Z"},"trusted":true},"execution_count":16,"outputs":[{"name":"stdout","text":"COUNTRY\nbra    51354\ncan     7730\ndeu    15485\nfra    10177\ntur    15689\nusa    70225\nName: PRICE, dtype: int64\n","output_type":"stream"}]},{"cell_type":"code","source":"price_mean = df.groupby('COUNTRY')['PRICE'].mean()\nprint(price_mean)","metadata":{"execution":{"iopub.status.busy":"2024-09-01T22:34:15.908779Z","iopub.execute_input":"2024-09-01T22:34:15.910185Z","iopub.status.idle":"2024-09-01T22:34:15.922387Z","shell.execute_reply.started":"2024-09-01T22:34:15.910135Z","shell.execute_reply":"2024-09-01T22:34:15.921002Z"},"trusted":true},"execution_count":17,"outputs":[{"name":"stdout","text":"COUNTRY\nbra    34.327540\ncan    33.608696\ndeu    34.032967\nfra    33.587459\ntur    34.787140\nusa    34.007264\nName: PRICE, dtype: float64\n","output_type":"stream"}]},{"cell_type":"code","source":"country_source_mean = df.groupby(['COUNTRY', 'SOURCE'])['PRICE'].mean()\nprint(country_source_mean)","metadata":{"execution":{"iopub.status.busy":"2024-09-01T22:39:29.236412Z","iopub.execute_input":"2024-09-01T22:39:29.237808Z","iopub.status.idle":"2024-09-01T22:39:29.250411Z","shell.execute_reply.started":"2024-09-01T22:39:29.237744Z","shell.execute_reply":"2024-09-01T22:39:29.249220Z"},"trusted":true},"execution_count":18,"outputs":[{"name":"stdout","text":"COUNTRY  SOURCE \nbra      android    34.387029\n         ios        34.222222\ncan      android    33.330709\n         ios        33.951456\ndeu      android    33.869888\n         ios        34.268817\nfra      android    34.312500\n         ios        32.776224\ntur      android    36.229437\n         ios        33.272727\nusa      android    33.760357\n         ios        34.371703\nName: PRICE, dtype: float64\n","output_type":"stream"}]},{"cell_type":"code","source":"country_source_sex_age_price_mean = df.groupby(['COUNTRY', 'SOURCE', 'SEX', 'AGE'])['PRICE'].mean()\nprint(country_source_sex_age_price_mean )","metadata":{"execution":{"iopub.status.busy":"2024-09-01T22:46:53.048127Z","iopub.execute_input":"2024-09-01T22:46:53.048612Z","iopub.status.idle":"2024-09-01T22:46:53.063297Z","shell.execute_reply.started":"2024-09-01T22:46:53.048568Z","shell.execute_reply":"2024-09-01T22:46:53.062160Z"},"trusted":true},"execution_count":19,"outputs":[{"name":"stdout","text":"COUNTRY  SOURCE   SEX     AGE\nbra      android  female  15     38.714286\n                          16     35.944444\n                          17     35.666667\n                          18     32.255814\n                          19     35.206897\n                                   ...    \nusa      ios      male    42     30.250000\n                          50     39.000000\n                          53     34.000000\n                          55     29.000000\n                          59     46.500000\nName: PRICE, Length: 348, dtype: float64\n","output_type":"stream"}]},{"cell_type":"code","source":"agg_df = df.groupby(['COUNTRY', 'SOURCE', 'SEX', 'AGE'])['PRICE'].mean()\nagg_df = agg_df.sort_values(ascending=False)\nprint(agg_df)","metadata":{"execution":{"iopub.status.busy":"2024-09-01T22:49:35.595764Z","iopub.execute_input":"2024-09-01T22:49:35.596799Z","iopub.status.idle":"2024-09-01T22:49:35.613539Z","shell.execute_reply.started":"2024-09-01T22:49:35.596735Z","shell.execute_reply":"2024-09-01T22:49:35.612152Z"},"trusted":true},"execution_count":20,"outputs":[{"name":"stdout","text":"COUNTRY  SOURCE   SEX     AGE\nbra      android  male    46     59.0\nusa      android  male    36     59.0\nfra      android  female  24     59.0\nusa      ios      male    32     54.0\ndeu      android  female  36     49.0\n                                 ... \nusa      ios      female  38     19.0\n                          30     19.0\ncan      android  female  27     19.0\nfra      android  male    18     19.0\ndeu      android  male    26      9.0\nName: PRICE, Length: 348, dtype: float64\n","output_type":"stream"}]},{"cell_type":"code","source":"agg_df = agg_df.reset_index()\nprint(agg_df)","metadata":{"execution":{"iopub.status.busy":"2024-09-01T22:55:00.058583Z","iopub.execute_input":"2024-09-01T22:55:00.059628Z","iopub.status.idle":"2024-09-01T22:55:00.073658Z","shell.execute_reply.started":"2024-09-01T22:55:00.059570Z","shell.execute_reply":"2024-09-01T22:55:00.072359Z"},"trusted":true},"execution_count":22,"outputs":[{"name":"stdout","text":"     index COUNTRY   SOURCE     SEX  AGE  PRICE\n0        0     bra  android    male   46   59.0\n1        1     usa  android    male   36   59.0\n2        2     fra  android  female   24   59.0\n3        3     usa      ios    male   32   54.0\n4        4     deu  android  female   36   49.0\n..     ...     ...      ...     ...  ...    ...\n343    343     usa      ios  female   38   19.0\n344    344     usa      ios  female   30   19.0\n345    345     can  android  female   27   19.0\n346    346     fra  android    male   18   19.0\n347    347     deu  android    male   26    9.0\n\n[348 rows x 6 columns]\n","output_type":"stream"}]},{"cell_type":"code","source":"bins = [0, 18, 23, 30, 40, 70]\nlabels = ['0_18', '19_23', '24_30', '31_40', '41_70']\n\n\ndf['age_category'] = pd.cut(df['AGE'], bins=bins, labels=labels)\n\n\nprint( df[['AGE', 'age_category']].head())","metadata":{"execution":{"iopub.status.busy":"2024-09-02T13:35:19.998299Z","iopub.execute_input":"2024-09-02T13:35:19.998713Z","iopub.status.idle":"2024-09-02T13:35:20.019749Z","shell.execute_reply.started":"2024-09-02T13:35:19.998670Z","shell.execute_reply":"2024-09-02T13:35:20.018604Z"},"trusted":true},"execution_count":5,"outputs":[{"name":"stdout","text":"   AGE age_category\n0   17         0_18\n1   17         0_18\n2   17         0_18\n3   17         0_18\n4   17         0_18\n","output_type":"stream"}]},{"cell_type":"code","source":"df['customers_level_based'] = df.apply(lambda x: f\"{x['COUNTRY'].upper()}_{x['SOURCE'].upper()}_{x['SEX'].upper()}_{x['age_category']}\", axis=1)\nagg_df = df.groupby('customers_level_based').agg({'PRICE': 'mean'}).reset_index()\nprint(agg_df.head())","metadata":{"execution":{"iopub.status.busy":"2024-09-02T13:54:18.299131Z","iopub.execute_input":"2024-09-02T13:54:18.299516Z","iopub.status.idle":"2024-09-02T13:54:18.404249Z","shell.execute_reply.started":"2024-09-02T13:54:18.299477Z","shell.execute_reply":"2024-09-02T13:54:18.403228Z"},"trusted":true},"execution_count":6,"outputs":[{"name":"stdout","text":"      customers_level_based      PRICE\n0   BRA_ANDROID_FEMALE_0_18  35.439394\n1  BRA_ANDROID_FEMALE_19_23  34.114943\n2  BRA_ANDROID_FEMALE_24_30  34.540541\n3  BRA_ANDROID_FEMALE_31_40  34.696203\n4  BRA_ANDROID_FEMALE_41_70  35.086957\n","output_type":"stream"}]}]}